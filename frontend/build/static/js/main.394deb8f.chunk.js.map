{"version":3,"sources":["reducers/orderReducer.js","reducers/userReducer.js","components/Header.js","actions/userActions.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","reducers/productsReducer.js","reducers/productReducer.js","components/SearchBar.jsx","components/PaginationTool.js","pages/Home.js","actions/productActions.js","reducers/cartReducer.js","actions/cartActions.js","pages/Cart.js","pages/ProductDetails.js","components/FormContainer.js","pages/Login.js","pages/Signup.js","actions/orderActions.js","pages/Profile.js","pages/Shipping.js","pages/Payment.js","pages/SubmitOrder.js","pages/Order.js","App.js","store.js","index.js"],"names":["createOrderSlice","createSlice","name","initialState","order","loading","error","success","reducers","createOrderRequest","state","createOrderSuccess","action","payload","createOrderFail","createOrderReset","updated","createOrderReducer","reducer","actions","orderDetailsSlice","orderDetailsRequest","orderDetailsSuccess","orderDetailsFail","orderDetailsReducer","orderPaySlice","orderPayRequest","orderPaySuccess","orderPayFail","orderPayReset","orderPayReducer","orderListUserSlice","orders","orderListUserRequest","orderListUserSuccess","orderListUserFail","orderListUserReset","orderListUserReducer","userSignupSlice","user","signupUserRequest","signupUserSuccess","signupUserFail","userSignupReducer","userLoginSlice","loginUserRequest","loginUserSuccess","loginUserFail","logoutUserRequest","userLoginReducer","userDetailsSlice","userDetailsRequest","userDetailsSuccess","userDetailsFail","userDetailsReset","userDetailsReducer","userUpdateSlice","userUpdateRequest","userUpdateSuccess","userUpdateFail","userUpdateReset","userUpdateReducer","Header","dispatch","useDispatch","useSelector","userLogin","useEffect","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","Collapse","id","Nav","className","Link","NavDropdown","title","Item","onClick","localStorage","removeItem","Footer","Row","Col","Rating","rating","numOfReviews","color","style","defaultProps","Product","product","Card","_id","Img","src","image","Body","Title","Text","as","numReviews","price","Message","children","Alert","Loader","width","height","margin","display","alt","productListSlice","products","productListFetch","productListSuccess","totalPages","page","productListFail","productListReducer","addReviewSlice","addReviewFetch","addReviewSuccess","addReviewFail","addReviewReset","addReviewReducer","productDetailsSlice","reviews","productDetailsFetch","productDetailsSuccess","productDetailsFail","SearchBar","useState","searchTerm","setSearchTerm","navigate","useNavigate","Form","onSubmit","e","preventDefault","trim","inline","Control","type","onChange","target","value","placeholder","Button","PaginationTool","query","Pagination","Array","keys","map","item","active","Home","productList","pageNumber","useParams","pageNum","axios","get","data","message","fetchProducts","m","md","lg","xl","cartSlice","itemsInCart","shippingAddress","paymentMethod","addItemToCart","newItem","find","push","removeItemFromCart","filter","addShippingAddress","addPaymentMethod","cartReset","addToCart","quantity","getState","stock","numInStock","setItem","JSON","stringify","cart","Cart","useSearchParams","searchParams","qty","productID","removeItemHandler","removeFromCart","length","ListGroup","Image","fluid","rounded","Number","reduce","acc","toFixed","disabled","ProductDetails","setQuantity","setRating","comment","setComment","productDetails","addReview","createReviewSuccess","createReviewLoading","createReviewError","fetchProductDetails","description","num","review","umOfReviews","createdAt","substring","productId","config","headers","Authorization","token","post","response","Group","controlId","Label","row","FormContainer","xs","Login","email","setEmail","password","setPassword","redirect","loginUser","Signup","confirmPassword","setConfirmPassword","setName","setMessage","userSignup","signupUser","getOrderDetails","Profile","userDetails","userLoginInfo","userUpdate","orderListUser","ordersLoading","ordersError","updatedUser","put","Table","striped","bordered","hover","responsive","totalPrice","isPaid","Shipping","address","setAddress","postalCode","setPostalCode","country","setCountry","city","setCity","required","Payment","setPaymentMethod","onOptionChange","prev","Check","label","checked","SubmitOrder","orderCreate","addDecimals","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","items","Order","orderId","orderDetails","orderPay","payLoading","paymentSuccess","href","result","App","path","element","getItem","parse","store","configureStore","productDetailsReducer","cartReducer","preloadedState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.394deb8f.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst createOrderInitialState = {\n  order: {},\n  loading: 'idle',\n  error: null,\n  success: false,\n}\nconst createOrderSlice = createSlice({\n  name: 'createOrder',\n  initialState: createOrderInitialState,\n  reducers: {\n    createOrderRequest(state) {\n      if (state.loading === 'idle') {\n        state.loading = 'pending'\n      }\n    },\n    createOrderSuccess(state, action) {\n      if (state.loading === 'pending') {\n        state.loading = 'idle'\n      }\n      state.order = action.payload\n      state.error = null\n      state.success = true\n    },\n    createOrderFail(state, action) {\n      if (state.loading === 'pending') {\n        state.loading = 'idle'\n      }\n      state.error = action.payload\n      state.success = false\n    },\n    createOrderReset(state) {\n      if (state.loading === 'pending') {\n        state.loading = 'idle'\n      }\n      state.error = null\n      state.updated = false\n      state.order = {}\n      state.success = false\n    },\n  },\n})\n\nexport const createOrderReducer = createOrderSlice.reducer\n\nexport const {\n  createOrderRequest,\n  createOrderSuccess,\n  createOrderFail,\n  createOrderReset,\n} = createOrderSlice.actions\n\nconst orderDetailsInitialState = {\n  order: [],\n  loading: 'pending',\n  error: null,\n}\nconst orderDetailsSlice = createSlice({\n  name: 'orderDetails',\n  initialState: orderDetailsInitialState,\n  reducers: {\n    orderDetailsRequest(state) {\n      if (state.loading === 'idle') {\n        state.loading = 'pending'\n      }\n    },\n    orderDetailsSuccess(state, action) {\n      if (state.loading === 'pending') {\n        state.loading = 'idle'\n      }\n      state.order = action.payload\n      state.error = null\n    },\n    orderDetailsFail(state, action) {\n      if (state.loading === 'pending') {\n        state.loading = 'idle'\n      }\n      state.error = action.payload\n    },\n  },\n})\n\nexport const orderDetailsReducer = orderDetailsSlice.reducer\n\nexport const { orderDetailsRequest, orderDetailsSuccess, orderDetailsFail } =\n  orderDetailsSlice.actions\n\nconst orderPayInitialState = {\n  loading: 'idle',\n  error: null,\n  success: false,\n}\nconst orderPaySlice = createSlice({\n  name: 'orderPay',\n  initialState: orderPayInitialState,\n  reducers: {\n    orderPayRequest(state) {\n      if (state.loading === 'idle') {\n        state.loading = 'pending'\n      }\n    },\n    orderPaySuccess(state) {\n      if (state.loading === 'pending') {\n        state.loading = 'idle'\n      }\n      state.success = true\n      state.error = null\n    },\n    orderPayFail(state, action) {\n      if (state.loading === 'pending') {\n        state.loading = 'idle'\n      }\n      state.error = action.payload\n    },\n    orderPayReset(state) {\n      if (state.loading === 'pending') {\n        state.loading = 'idle'\n      }\n      state.error = null\n      state.success = false\n    },\n  },\n})\n\nexport const orderPayReducer = orderPaySlice.reducer\n\nexport const { orderPayRequest, orderPaySuccess, orderPayFail, orderPayReset } =\n  orderPaySlice.actions\n\nconst orderListUserInitialState = {\n  loading: 'idle',\n  error: null,\n  orders: [],\n}\nconst orderListUserSlice = createSlice({\n  name: 'orderListUser',\n  initialState: orderListUserInitialState,\n  reducers: {\n    orderListUserRequest(state) {\n      if (state.loading === 'idle') {\n        state.loading = 'pending'\n      }\n    },\n    orderListUserSuccess(state, action) {\n      if (state.loading === 'pending') {\n        state.loading = 'idle'\n      }\n      state.orders = action.payload\n      state.error = null\n    },\n    orderListUserFail(state, action) {\n      if (state.loading === 'pending') {\n        state.loading = 'idle'\n      }\n      state.error = action.payload\n    },\n    orderListUserReset(state) {\n      if (state.loading === 'pending') {\n        state.loading = 'idle'\n      }\n      state.error = null\n      state.orders = []\n    },\n  },\n})\n\nexport const orderListUserReducer = orderListUserSlice.reducer\n\nexport const {\n  orderListUserRequest,\n  orderListUserSuccess,\n  orderListUserFail,\n  orderListUserReset,\n} = orderListUserSlice.actions\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst userSignupInitialState = { user: null, loading: 'idle', error: null };\nconst userSignupSlice = createSlice({\n  name: 'userSignup',\n  initialState: userSignupInitialState,\n  reducers: {\n    signupUserRequest(state) {\n      if (state.loading === 'idle') {\n        state.loading = 'pending';\n      }\n    },\n    signupUserSuccess(state, action) {\n      if (state.loading === 'pending') {\n        state.loading = 'idle';\n      }\n      state.user = action.payload;\n      state.error = null;\n    },\n    signupUserFail(state, action) {\n      if (state.loading === 'pending') {\n        state.loading = 'idle';\n      }\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const userSignupReducer = userSignupSlice.reducer;\n\nexport const { signupUserRequest, signupUserSuccess, signupUserFail } =\n  userSignupSlice.actions;\n\nconst userLoginInitialState = { user: null, loading: 'idle', error: null };\nconst userLoginSlice = createSlice({\n  name: 'userLogin',\n  initialState: userLoginInitialState,\n  reducers: {\n    loginUserRequest(state) {\n      if (state.loading === 'idle') {\n        state.loading = 'pending';\n      }\n    },\n    loginUserSuccess(state, action) {\n      if (state.loading === 'pending') {\n        state.loading = 'idle';\n      }\n      state.user = action.payload;\n      state.error = null;\n    },\n    loginUserFail(state, action) {\n      if (state.loading === 'pending') {\n        state.loading = 'idle';\n      }\n      state.error = action.payload;\n    },\n    logoutUserRequest(state) {\n      state.user = null;\n      state.loading = 'idle';\n      state.error = null;\n    },\n  },\n});\n\nexport const userLoginReducer = userLoginSlice.reducer;\n\nexport const {\n  loginUserRequest,\n  loginUserSuccess,\n  loginUserFail,\n  logoutUserRequest,\n} = userLoginSlice.actions;\n\nconst userDetailsInitialState = { user: {}, loading: 'idle', error: null };\nconst userDetailsSlice = createSlice({\n  name: 'userDetails',\n  initialState: userDetailsInitialState,\n  reducers: {\n    userDetailsRequest(state) {\n      if (state.loading === 'idle') {\n        state.loading = 'pending';\n      }\n    },\n    userDetailsSuccess(state, action) {\n      if (state.loading === 'pending') {\n        state.loading = 'idle';\n      }\n      state.user = action.payload;\n      state.error = null;\n    },\n    userDetailsFail(state, action) {\n      if (state.loading === 'pending') {\n        state.loading = 'idle';\n      }\n      state.error = action.payload;\n    },\n    userDetailsReset(state) {\n      if (state.loading === 'pending') {\n        state.loading = 'idle';\n      }\n      state.error = null;\n      state.user = {};\n    },\n  },\n});\n\nexport const userDetailsReducer = userDetailsSlice.reducer;\n\nexport const {\n  userDetailsRequest,\n  userDetailsSuccess,\n  userDetailsFail,\n  userDetailsReset,\n} = userDetailsSlice.actions;\n\n// used to update user profile\nconst userUpdateInitialState = {\n  user: {},\n  loading: 'idle',\n  error: null,\n  updated: false,\n};\nconst userUpdateSlice = createSlice({\n  name: 'userUpdate',\n  initialState: userUpdateInitialState,\n  reducers: {\n    userUpdateRequest(state) {\n      if (state.loading === 'idle') {\n        state.loading = 'pending';\n      }\n    },\n    userUpdateSuccess(state, action) {\n      if (state.loading === 'pending') {\n        state.loading = 'idle';\n      }\n      state.user = action.payload;\n      state.updated = true;\n      state.error = null;\n    },\n    userUpdateFail(state, action) {\n      if (state.loading === 'pending') {\n        state.loading = 'idle';\n      }\n      state.error = action.payload;\n    },\n    userUpdateReset(state) {\n      if (state.loading === 'pending') {\n        state.loading = 'idle';\n      }\n      state.error = null;\n      state.updated = false;\n      state.user = {};\n    },\n  },\n});\n\nexport const userUpdateReducer = userUpdateSlice.reducer;\n\nexport const {\n  userUpdateRequest,\n  userUpdateSuccess,\n  userUpdateFail,\n  userUpdateReset,\n} = userUpdateSlice.actions;\n","import React, { useEffect } from 'react';\nimport { Container, Navbar, Nav, NavDropdown } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { userLogout } from '../actions/userActions';\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const { user } = useSelector((state) => state.userLogin);\n\n  const logoutHandler = () => {\n    dispatch(userLogout());\n  };\n\n  useEffect(() => {}, [user]);\n\n  return (\n    <header>\n      <Navbar bg='primary' variant='dark' expand='lg' collapseOnSelect>\n        <Container>\n          <LinkContainer to='/'>\n            <Navbar.Brand>Shopbite</Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\n          <Navbar.Collapse id='basic-navbar-nav'>\n            <Nav className='ml-auto my-1'>\n              {/* 'ml-auto' margin left */}\n              <LinkContainer to='/cart'>\n                <Nav.Link>\n                  <i className='fas fa-shopping-cart'></i> CART\n                </Nav.Link>\n              </LinkContainer>\n              {user ? (\n                <NavDropdown title={user.name} id='username'>\n                  <LinkContainer to='/profile'>\n                    <NavDropdown.Item>PROFILE</NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    LOGOUT\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to='/login'>\n                  <Nav.Link>\n                    <i className='fas fa-user'></i> LOG IN\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default Header;\n","import axios from 'axios';\nimport { orderListUserReset } from '../reducers/orderReducer.js';\nimport {\n  loginUserRequest,\n  loginUserSuccess,\n  loginUserFail,\n  logoutUserRequest,\n} from '../reducers/userReducer.js';\n\nimport {\n  signupUserRequest,\n  signupUserSuccess,\n  signupUserFail,\n} from '../reducers/userReducer.js';\n\nimport {\n  userDetailsRequest,\n  userDetailsSuccess,\n  userDetailsFail,\n  userDetailsReset,\n} from '../reducers/userReducer.js';\n\nimport {\n  userUpdateRequest,\n  userUpdateSuccess,\n  userUpdateFail,\n  userUpdateReset,\n} from '../reducers/userReducer.js';\n\nexport const signupUser = (email, password, name) => async (dispatch) => {\n  try {\n    dispatch(signupUserRequest());\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    const { data } = await axios.post(\n      '/api/users',\n      // route to register new users\n      { email, password, name },\n      config\n    );\n    dispatch(signupUserSuccess(data));\n    dispatch(loginUserSuccess(data));\n    // login user after signup successful\n    // saving in users browser\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch(\n      signupUserFail(\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      )\n    );\n  }\n};\n\nexport const loginUser = (email, password) => async (dispatch) => {\n  try {\n    dispatch(loginUserRequest());\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    const { data } = await axios.post(\n      '/api/users/login',\n      { email, password },\n      config\n    );\n\n    dispatch(loginUserSuccess(data));\n    // saving in users browser\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch(\n      loginUserFail(\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      )\n    );\n  }\n};\n\nexport const userLogout = () => async (dispatch) => {\n  localStorage.removeItem('userInfo');\n  dispatch(logoutUserRequest());\n  dispatch(orderListUserReset());\n  dispatch(userDetailsReset());\n};\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch(userDetailsRequest());\n\n    const {\n      userLogin: { user },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${user.token}`,\n        // passing the token to the backend\n      },\n    };\n\n    const { data } = await axios.get(`/api/users/${id}`, config);\n    dispatch(userDetailsSuccess(data));\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n\n    if (message === 'Not authorized') {\n      dispatch(logoutUserRequest());\n      // logout user if token is invalid\n    }\n    dispatch(userDetailsFail(message));\n  }\n};\n\nexport const updateUserProfile =\n  (updatedUser) => async (dispatch, getState) => {\n    try {\n      dispatch(userUpdateRequest());\n\n      const {\n        userLogin: { user },\n      } = getState();\n\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.put(\n        `/api/users/profile`,\n        updatedUser,\n        config\n      );\n\n      dispatch(userUpdateSuccess(data));\n      dispatch(loginUserSuccess(data));\n      localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      if (message === 'Not authorized') {\n        dispatch(logoutUserRequest());\n      }\n      dispatch(userUpdateFail(message));\n    }\n  };\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row>\n          <Col className='text-center py-3'>\n            &copy; 2023 Copyright: Shopbite{' '}\n          </Col>\n        </Row>\n      </Container>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\n\nconst Rating = ({ rating, numOfReviews, color }) => {\n  return (\n    <div className='rating'>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            rating >= 1\n              ? 'fas fa-star'\n              : rating >= 0.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            rating >= 2\n              ? 'fas fa-star'\n              : rating >= 1.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            rating >= 3\n              ? 'fas fa-star'\n              : rating >= 2.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            rating >= 4\n              ? 'fas fa-star'\n              : rating >= 3.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            rating >= 5\n              ? 'fas fa-star'\n              : rating >= 4.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <br />\n      <span>{numOfReviews}</span>\n    </div>\n  )\n}\n\nRating.defaultProps = {\n  color: '#FDCC0D',\n}\n\nexport default Rating\n","import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport Rating from './Rating'\nimport { Link } from 'react-router-dom'\n\nconst Product = ({ product }) => {\n  return (\n    <Card className='my-3 p-3 rounded'>\n      <Link to={`/product/${product._id}`}>\n        <Card.Img src={product.image} variant='top' />\n      </Link>\n      <Card.Body>\n        <Link to={`/product/${product._id}`}>\n          <Card.Title>\n            <strong>{product.name}</strong>\n          </Card.Title>\n        </Link>\n        <Card.Text as='div'>\n          <Rating\n            rating={product.rating}\n            numOfReviews={`${product.numReviews} reviews`}\n          />\n        </Card.Text>\n        <Card.Text as='h3'>${product.price}</Card.Text>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default Product\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst Message = ({ variant, children }) => {\n  return <Alert variant={variant}>{children}</Alert>\n}\n\nMessage.defaultProps = {\n  variant: 'info'\n}\n\nexport default Message\n","import React from 'react'\n\nconst Loader = () => {\n  return (\n    <img\n      style={{\n        width: '150px',\n        height: '150px',\n        margin: '60px auto',\n        display: 'block',\n      }}\n      alt='Loading'\n      src='/images/Spinner.gif'\n    ></img>\n  )\n}\n\nexport default Loader\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst productsInitialState = { products: [], loading: 'idle', error: null }\n\n// First, define the reducer and action creators via `createSlice`\nconst productListSlice = createSlice({\n  name: 'productList',\n  initialState: productsInitialState,\n  reducers: {\n    productListFetch(state, action) {\n      if (state.loading === 'idle') {\n        state.loading = 'pending'\n      }\n    },\n    productListSuccess(state, action) {\n      if (state.loading === 'pending') {\n        state.loading = 'idle'\n      }\n      state.products = action.payload.products\n      state.totalPages = action.payload.totalPages\n      state.page = action.payload.page\n      state.error = null\n    },\n    productListFail(state, action) {\n      if (state.loading === 'pending') {\n        state.loading = 'idle'\n      }\n      state.error = action.payload\n    },\n  },\n})\n\nexport const { productListFetch, productListSuccess, productListFail } =\n  productListSlice.actions\n\nexport const productListReducer = productListSlice.reducer\n\nconst addReviewInitialState = { loading: 'idle', error: null, success: false }\n\n// First, define the reducer and action creators via `createSlice`\nconst addReviewSlice = createSlice({\n  name: 'addReview',\n  initialState: addReviewInitialState,\n  reducers: {\n    addReviewFetch(state) {\n      if (state.loading === 'idle') {\n        state.loading = 'pending'\n      }\n    },\n    addReviewSuccess(state) {\n      if (state.loading === 'pending') {\n        state.loading = 'idle'\n      }\n      state.success = true\n      state.error = null\n    },\n    addReviewFail(state, action) {\n      if (state.loading === 'pending') {\n        state.loading = 'idle'\n      }\n      state.error = action.payload\n    },\n    addReviewReset(state, action) {\n      if (state.loading === 'pending') {\n        state.loading = 'idle'\n      }\n      state.error = null\n      state.success = false\n    },\n  },\n})\n\nexport const {\n  addReviewFetch,\n  addReviewSuccess,\n  addReviewFail,\n  addReviewReset,\n} = addReviewSlice.actions\n\nexport const addReviewReducer = addReviewSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst productInitialState = {\n  product: { reviews: [] },\n  loading: 'idle',\n  error: null,\n};\n\nconst productDetailsSlice = createSlice({\n  name: 'productList',\n  initialState: productInitialState,\n  reducers: {\n    productDetailsFetch(state) {\n      if (state.loading === 'idle') {\n        state.loading = 'pending';\n      }\n    },\n    productDetailsSuccess(state, action) {\n      if (state.loading === 'pending') {\n        state.loading = 'idle';\n      }\n      state.product = action.payload;\n      state.error = null;\n    },\n    productDetailsFail(state, action) {\n      if (state.loading === 'pending') {\n        state.loading = 'idle';\n      }\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const {\n  productDetailsFetch,\n  productDetailsSuccess,\n  productDetailsFail,\n} = productDetailsSlice.actions;\n\nexport default productDetailsSlice.reducer;\n","import React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\n\nconst SearchBar = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const navigate = useNavigate();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (searchTerm.trim()) {\n      navigate(`/search/${searchTerm}`);\n    } else {\n      navigate('/');\n    }\n  };\n\n  return (\n    <Form onSubmit={submitHandler} inline className='mb-2'>\n      <Form.Control\n        type='text'\n        name='query'\n        onChange={(e) => setSearchTerm(e.target.value)}\n        placeholder='Search a Product'\n        className='mr-sm-2 ml-sm-6 py-3'\n      ></Form.Control>\n      <Button type='submit' variant='outline-success' className='py-1'>\n        Search\n      </Button>\n    </Form>\n  );\n};\n\nexport default SearchBar;\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst PaginationTool = ({ totalPages, page, query = '' }) => {\n  return (\n    totalPages > 1 && (\n      <Pagination>\n        {[...Array(totalPages).keys()].map((item) => (\n          <LinkContainer\n            key={item + 1}\n            to={\n              query ? `/search/${query}/page/${item + 1}` : `/page/${item + 1}`\n            }\n          >\n            <Pagination.Item active={item + 1 === page}>\n              {item + 1}\n            </Pagination.Item>\n          </LinkContainer>\n        ))}\n      </Pagination>\n    )\n  )\n}\n\nexport default PaginationTool\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { fetchProducts } from '../actions/productActions'\nimport SearchBar from '../components/SearchBar'\nimport { useParams } from 'react-router-dom'\nimport PaginationTool from '../components/PaginationTool'\n\nconst Home = () => {\n  const dispatch = useDispatch()\n  const { loading, error, products, totalPages, page } = useSelector(\n    (state) => state.productList\n  )\n  const { pageNum } = useParams()\n  const pageNumber = pageNum || 1\n  const { query } = useParams()\n\n  useEffect(() => {\n    dispatch(fetchProducts(query, pageNumber))\n  }, [dispatch, query, pageNumber])\n\n  return (\n    <>\n      <h1>Featured Items</h1>\n      <SearchBar />\n      {loading === 'pending' ? ( // if its loading\n        <Loader />\n      ) : error ? ( // if not loading but there is an error\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Row>\n          {products?.map((product) => (\n            <Col key={product._id} m={12} md={6} lg={4} xl={3}>\n              <Product product={product} />\n            </Col>\n          ))}\n        </Row>\n      )}\n      <PaginationTool\n        totalPages={totalPages}\n        page={page}\n        query={query ? query : ''}\n      />\n    </>\n  )\n}\n\nexport default Home\n","import axios from 'axios'\nimport {\n  productListFetch,\n  productListSuccess,\n  productListFail,\n  addReviewFetch,\n  addReviewSuccess,\n  addReviewFail,\n} from '../reducers/productsReducer'\n\nimport {\n  productDetailsFetch,\n  productDetailsSuccess,\n  productDetailsFail,\n} from '../reducers/productReducer'\nimport { logoutUserRequest } from '../reducers/userReducer'\n\nexport const fetchProducts =\n  (query = '', page = '') =>\n  async (dispatch) => {\n    try {\n      dispatch(productListFetch())\n      const { data } = await axios.get(\n        `/api/products?product=${query}&pageNum=${page}`\n      )\n      dispatch(productListSuccess(data))\n    } catch (error) {\n      dispatch(productListFail(error.message))\n    }\n  }\n\nexport const fetchProductDetails = (id) => async (dispatch) => {\n  try {\n    dispatch(productDetailsFetch())\n    const { data } = await axios.get(`/api/products/${id}`)\n    dispatch(productDetailsSuccess(data))\n  } catch (error) {\n    dispatch(productDetailsFail(error.message))\n  }\n}\n\nexport const createReview =\n  (productId, review) => async (dispatch, getState) => {\n    try {\n      dispatch(addReviewFetch())\n\n      const {\n        userLogin: { user },\n      } = getState()\n\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${user.token}`,\n        },\n      }\n\n      await axios.post(`/api/products/${productId}/reviews`, review, config)\n\n      dispatch(addReviewSuccess())\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message\n      if (message === 'Not authorized') {\n        dispatch(logoutUserRequest())\n      }\n      dispatch(addReviewFail(message))\n    }\n  }\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst cartInitialState = {\n  itemsInCart: [],\n  shippingAddress: {},\n  paymentMethod: '',\n}\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: cartInitialState,\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload\n      const alreadyInCart = state.itemsInCart.find(\n        (item) => item.product === newItem.product\n      )\n\n      if (alreadyInCart) {\n        state.itemsInCart = state.itemsInCart.map((item) =>\n          item.product === newItem.product ? newItem : item\n        )\n        // update / replace item in cart if already in cart\n      } else {\n        state.itemsInCart.push(newItem)\n      }\n    },\n    removeItemFromCart(state, action) {\n      state.itemsInCart = state.itemsInCart.filter(\n        (item) => item.product !== action.payload\n      )\n    },\n    addShippingAddress(state, action) {\n      state.shippingAddress = action.payload\n    },\n    addPaymentMethod(state, action) {\n      state.paymentMethod = action.payload\n    },\n    cartReset(state) {\n      state.itemsInCart = []\n    },\n  },\n})\n\nexport const {\n  addItemToCart,\n  removeItemFromCart,\n  addShippingAddress,\n  addPaymentMethod,\n  cartReset,\n} = cartSlice.actions\n\nexport default cartSlice.reducer\n","import axios from 'axios'\nimport {\n  addItemToCart,\n  removeItemFromCart,\n  addShippingAddress,\n  addPaymentMethod,\n} from '../reducers/cartReducer'\n\nexport const addToCart = (id, quantity) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/products/${id}/`)\n  dispatch(\n    addItemToCart({\n      product: data._id,\n      price: data.price,\n      image: data.image,\n      name: data.name,\n      stock: data.numInStock,\n      quantity,\n    })\n  )\n  //save current cart to local storage\n  localStorage.setItem(\n    'itemsInCart',\n    JSON.stringify(getState().cart.itemsInCart)\n  )\n}\n\nexport const removeFromCart = (id) => async (dispatch, getState) => {\n  dispatch(removeItemFromCart(id))\n  // update cart in localStorage\n  localStorage.setItem(\n    'itemsInCart',\n    JSON.stringify(getState().cart.itemsInCart)\n  )\n}\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n  dispatch(addShippingAddress(data))\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n  dispatch(addPaymentMethod(data))\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\n}\n","import React, { useEffect } from 'react'\nimport { Row, Col, ListGroup, Card, Button, Image, Form } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\nimport { Link, useParams, useNavigate, useSearchParams } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\n\nconst Cart = () => {\n  const [searchParams] = useSearchParams()\n  const qty = searchParams.get('qty') ? searchParams.get('qty') : 1\n  const navigate = useNavigate()\n  const { id: productID } = useParams()\n  const dispatch = useDispatch()\n  const { itemsInCart } = useSelector((state) => state.cart)\n\n  useEffect(() => {\n    if (productID) {\n      dispatch(addToCart(productID, qty))\n    }\n  }, [dispatch, productID, qty])\n\n  const handleCheckout = () => {\n    navigate('/shipping')\n    // if user is logged in will go to shipping, if not, to the login page\n  }\n\n  const removeItemHandler = (id) => {\n    dispatch(removeFromCart(id))\n  }\n\n  return (\n    <Row>\n      <Col md={8}>\n        <h1>Shopping Cart</h1>\n        {itemsInCart.length === 0 ? (\n          <>\n            <Message>There is no item in your cart</Message>\n            <Message>\n              <Link to='/'>Go Back to Home Page</Link>\n            </Message>\n          </>\n        ) : (\n          <ListGroup variant='flush'>\n            {itemsInCart.map((item) => (\n              <ListGroup.Item key={item.product}>\n                <Row>\n                  <Col md={2}>\n                    <Image src={item.image} alt={item.name} fluid rounded />\n                  </Col>\n                  <Col md={3}>\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                  </Col>\n                  <Col md={2}>${item.price}</Col>\n                  <Col md={2}>\n                    <Form.Control\n                      as='select'\n                      value={item.quantity}\n                      onChange={(e) =>\n                        dispatch(\n                          addToCart(item.product, Number(e.target.value))\n                        )\n                      }\n                    >\n                      {[...Array(item.stock).keys()].map((item) => (\n                        <option key={item + 1} value={item + 1}>\n                          {item + 1}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Col>\n                  <Col md={2}>\n                    <Button\n                      type='button'\n                      variant='light'\n                      onClick={() => removeItemHandler(item.product)}\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        )}\n      </Col>\n      <Col md={4}>\n        <Card>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Subtotal</h2>\n              <p>\n                Number of Items:{' '}\n                {itemsInCart.reduce(\n                  (acc, item) => acc + Number(item.quantity),\n                  0\n                )}\n              </p>\n              <p>\n                $\n                {itemsInCart\n                  .reduce((acc, item) => acc + item.quantity * item.price, 0)\n                  .toFixed(2)}\n              </p>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Button\n                type='button'\n                className='btn-block'\n                disabled={itemsInCart.length === 0}\n                onClick={handleCheckout}\n              >\n                Proceed To Checkout\n              </Button>\n            </ListGroup.Item>\n          </ListGroup>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Cart\n","import React, { useState, useEffect } from 'react';\nimport {\n  Row,\n  Col,\n  ListGroup,\n  Image,\n  Card,\n  Button,\n  Form,\n} from 'react-bootstrap';\nimport { Link, useParams, useNavigate } from 'react-router-dom';\nimport Rating from '../components/Rating';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchProductDetails, createReview } from '../actions/productActions';\nimport { addReviewReset } from '../reducers/productsReducer';\n\nconst ProductDetails = () => {\n  const [quantity, setQuantity] = useState(1);\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState('');\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const { product, loading, error } = useSelector(\n    (state) => state.productDetails\n  );\n\n  const {\n    success: createReviewSuccess,\n    loading: createReviewLoading,\n    error: createReviewError,\n  } = useSelector((state) => state.addReview);\n\n  const { user } = useSelector((state) => state.userLogin);\n\n  useEffect(() => {\n    if (createReviewSuccess) {\n      setRating(0);\n      setComment('');\n    }\n    dispatch(fetchProductDetails(id));\n    if (!product._id) {\n      //fetch product details and reset review state\n      // dispatch(fetchProductDetails(id));\n      dispatch(addReviewReset());\n    }\n  }, [product._id, dispatch, id, createReviewSuccess]);\n\n  const submitHandler = () => {\n    navigate(`/cart/${id}?qty=${quantity}`);\n    //pass prod id and qty (query string)\n  };\n\n  const addReviewSubmitHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      createReview(id, {\n        rating,\n        comment,\n      })\n    );\n  };\n\n  return (\n    <div>\n      <Link className='btn btn-light my-3' to='/'>\n        {/* btn btn-secondary */}\n        Go Back\n      </Link>\n      {loading === 'pending' ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Row>\n            <Col md={6}>\n              <Image\n                src={product.image}\n                alt={product.name}\n                className='rounded'\n                fluid\n              />\n            </Col>\n            <Col md={3}>\n              <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  <h3>{product.name}</h3>\n                </ListGroup.Item>\n              </ListGroup>\n              <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  <Rating\n                    rating={product.rating}\n                    numOfReviews={`${product.numReviews} reviews`}\n                  />\n                </ListGroup.Item>\n                <ListGroup.Item>Price: {product.price}</ListGroup.Item>\n                <ListGroup.Item>\n                  Description: <br /> {product.description}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <Col md={3}>\n              <Card>\n                <ListGroup variant='flush'>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Price:</Col>\n                      <Col>\n                        <strong>${product.price}</strong>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Status:</Col>\n                      <Col>\n                        <strong>\n                          {product.numInStock > 0 ? 'In Stock' : 'Out of Stock'}\n                        </strong>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                  {product.numInStock > 0 && (\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Quantity:</Col>\n                        <Col>\n                          <Form.Control\n                            as='select'\n                            value={quantity}\n                            onChange={(e) => setQuantity(e.target.value)}\n                          >\n                            {[...Array(product.numInStock).keys()].map(\n                              (num) => (\n                                <option key={num + 1} value={num + 1}>\n                                  {num + 1}\n                                </option>\n                              )\n                            )}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  )}\n                  <ListGroup.Item>\n                    <Button\n                      onClick={submitHandler}\n                      className='primary btn-block'\n                      type='button'\n                      disabled={product.numInStock <= 0}\n                    >\n                      ADD TO CART\n                    </Button>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={6}>\n              {/* add reviews */}\n              <h2>Reviews</h2>\n              {product.reviews.length === 0 && (\n                <Message>No Reviews for this product</Message>\n              )}\n              <ListGroup variant='flush'>\n                {product.reviews.map((review) => (\n                  <ListGroup.Item key={review._id}>\n                    <strong>{review.name}</strong>\n                    <Rating\n                      rating={review.rating}\n                      umOfReviews={`${product.numReviews}`}\n                    />\n                    <p>{review.createdAt.substring(0, 10)}</p>\n                    <p>{review.comment}</p>\n                  </ListGroup.Item>\n                ))}\n                <ListGroup.Item>\n                  <h2>Write a Review:</h2>\n                  {createReviewSuccess && (\n                    <Message variant='success'>\n                      Your Review has been submitted!\n                    </Message>\n                  )}\n                  {createReviewLoading === 'pending' ? (\n                    <Loader />\n                  ) : (\n                    createReviewError && (\n                      <Message variant='danger'>{createReviewError}</Message>\n                    )\n                  )}\n\n                  {user ? (\n                    <Form onSubmit={addReviewSubmitHandler}>\n                      <Form.Group controlId='rating'>\n                        <Form.Label>Rating</Form.Label>\n                        <Form.Control\n                          as='select'\n                          value={rating}\n                          onChange={(e) => setRating(e.target.value)}\n                        >\n                          <option value=''>Select an option</option>\n                          <option value='1'>1 star - Poor</option>\n                          <option value='2'>2 stars - Fair</option>\n                          <option value='3'>3 stars - Good</option>\n                          <option value='4'>4 stars - Very Good</option>\n                          <option value='5'>5 stars - Excellent</option>\n                        </Form.Control>\n                      </Form.Group>\n                      <Form.Group controlId='comment'>\n                        <Form.Label>Leave a Comment:</Form.Label>\n                        <Form.Control\n                          as='textarea'\n                          row='3'\n                          value={comment}\n                          onChange={(e) => setComment(e.target.value)}\n                        ></Form.Control>\n                      </Form.Group>\n                      <Button\n                        disabled={createReviewLoading === 'pending'}\n                        type='submit'\n                        variant='primary'\n                      >\n                        Submit Review\n                      </Button>\n                    </Form>\n                  ) : (\n                    <Message>\n                      Please <Link to='/login'>login</Link>\n                    </Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ProductDetails;\n","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nconst FormContainer = ({ children }) => {\n  return (\n    <Container>\n      <Row className='justify-content-md-center'>\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default FormContainer;\n","import React, { useState, useEffect } from 'react';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { loginUser } from '../actions/userActions';\nimport { Link, useNavigate, useSearchParams } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const [searchParams] = useSearchParams();\n  const redirect = searchParams.get('redirect')\n    ? searchParams.get('redirect')\n    : '/';\n  const navigate = useNavigate();\n\n  const { loading, error, user } = useSelector((state) => state.userLogin);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (user) {\n      navigate(redirect);\n    }\n    // if user already logged, redirect to router in the query params, if no redirect value, go to home page\n  }, [navigate, redirect, user]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(loginUser(email, password));\n  };\n\n  return (\n    <FormContainer>\n      <h1>Log In</h1>\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading === 'pending' ? <Loader /> : null}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address:</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Enter email address'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Enter Password:</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Enter password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Sign In\n        </Button>\n      </Form>\n\n      <Row className='py-3'>\n        <Col>\n          Are You a New Customer?{'  '}\n          <Link to={redirect ? `/signup?redirect=${redirect}` : '/signup'}>\n            {/* delete this? */}\n            Sign Up\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  );\n};\n\nexport default Login;\n","import React, { useState, useEffect } from 'react';\nimport { Link, useNavigate, useSearchParams } from 'react-router-dom';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { signupUser } from '../actions/userActions';\n\nconst Signup = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [name, setName] = useState('');\n  const [message, setMessage] = useState(null);\n\n  const dispatch = useDispatch();\n  const { user, loading, error } = useSelector((state) => state.userSignup);\n\n  const [searchParams] = useSearchParams();\n  const redirect = searchParams.get('redirect')\n    ? searchParams.get('redirect')\n    : '/';\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (user) {\n      navigate(redirect);\n    }\n  }, [navigate, redirect, user]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match');\n    } else {\n      dispatch(signupUser(email, password, name));\n    }\n  };\n\n  return (\n    <FormContainer>\n      <h1>Sign Up</h1>\n      {message && <Message variant='danger'>{message}</Message>}\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading === 'pending' ? <Loader /> : null}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address:</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Enter email address'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Password:</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Enter password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='confirmPassword'>\n          <Form.Label>Confirm Password:</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Confirm password'\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='name'>\n          <Form.Label>Name:</Form.Label>\n          <Form.Control\n            type='name'\n            placeholder='Enter your name'\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Register\n        </Button>\n      </Form>\n\n      <Row className='py-3'>\n        <Col>\n          Already Have an Account?{'  '}\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n            Login Here\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  );\n};\n\nexport default Signup;\n","import axios from 'axios'\nimport {\n  createOrderRequest,\n  createOrderSuccess,\n  createOrderFail,\n  orderDetailsRequest,\n  orderDetailsSuccess,\n  orderDetailsFail,\n  orderPayRequest,\n  orderPaySuccess,\n  orderPayFail,\n  orderListUserRequest,\n  orderListUserSuccess,\n  orderListUserFail,\n} from '../reducers/orderReducer'\nimport { logoutUserRequest } from '../reducers/userReducer.js'\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch(createOrderRequest())\n\n    const {\n      userLogin: { user },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${user.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`/api/orders`, order, config)\n\n    dispatch(createOrderSuccess(data))\n    //cart clean items\n    localStorage.removeItem('cartItems')\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized') {\n      dispatch(logoutUserRequest())\n    }\n    dispatch(createOrderFail(message))\n  }\n}\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch(orderDetailsRequest())\n\n    const {\n      userLogin: { user },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${user.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders/${id}`, config)\n\n    dispatch(orderDetailsSuccess(data))\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized') {\n      dispatch(logoutUserRequest())\n    }\n    dispatch(orderDetailsFail(message))\n  }\n}\n\nexport const payOrder = (id) => async (dispatch, getState) => {\n  try {\n    dispatch(orderPayRequest())\n\n    const {\n      userLogin: { user },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${user.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/orders/${id}/pay`,\n      { result: 'success' },\n      config\n    )\n\n    dispatch(orderPaySuccess(data))\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized') {\n      dispatch(logoutUserRequest())\n    }\n    dispatch(orderPayFail(message))\n  }\n}\n\nexport const listUserOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch(orderListUserRequest())\n\n    const {\n      userLogin: { user },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${user.token}`,\n      },\n    }\n    const { data } = await axios.get(`/api/orders/myorders`, config)\n\n    dispatch(orderListUserSuccess(data))\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized') {\n      dispatch(logoutUserRequest())\n    }\n    dispatch(orderListUserFail(message))\n  }\n}\n","import React, { useState, useEffect } from 'react';\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\nimport { userUpdateReset } from '../reducers/userReducer.js';\nimport { useNavigate } from 'react-router-dom';\nimport { listUserOrders } from '../actions/orderActions';\n\nconst Profile = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [name, setName] = useState('');\n  const [message, setMessage] = useState(null);\n  const navigate = useNavigate();\n\n  const dispatch = useDispatch();\n\n  const {\n    loading,\n    error,\n    user: userDetails,\n  } = useSelector((state) => state.userDetails);\n\n  const { user: userLoginInfo } = useSelector((state) => state.userLogin);\n  const { updated } = useSelector((state) => state.userUpdate);\n  const {\n    loading: ordersLoading,\n    error: ordersError,\n    orders,\n  } = useSelector((state) => state.orderListUser);\n\n  useEffect(() => {\n    if (!userLoginInfo) {\n      // check if user is logged in using the userLoginReducer\n      navigate('/login');\n    } else {\n      if (!userDetails || !userDetails.name || updated) {\n        dispatch(userUpdateReset());\n        dispatch(getUserDetails('profile'));\n        //hit the end point api/users/profile (to fetch the profile of current user)\n      } else {\n        setName(userDetails.name);\n        setEmail(userDetails.email);\n        dispatch(listUserOrders());\n      }\n    }\n  }, [dispatch, userDetails, navigate, userLoginInfo, updated]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      return setMessage('Passwords do not match');\n    }\n    dispatch(updateUserProfile({ id: userDetails._id, name, email, password }));\n  };\n\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>User Profile</h2>\n        {message && <Message variant='danger'>{message}</Message>}\n        {updated && <Message variant='success'>Profile Updated</Message>}\n        {loading === 'pending' ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name:</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='email'>\n              <Form.Label>Email Address:</Form.Label>\n              <Form.Control\n                type='email'\n                placeholder='Enter email address'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='password'>\n              <Form.Label>Password:</Form.Label>\n              <Form.Control\n                type='password'\n                placeholder='Enter password'\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='confirmPassword'>\n              <Form.Label>Confirm Password:</Form.Label>\n              <Form.Control\n                type='password'\n                placeholder='Confirm password'\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update Profile\n            </Button>\n          </Form>\n        )}\n      </Col>\n      <Col md={9}>\n        <h2>My Orders</h2>\n        {ordersLoading === 'pending' ? (\n          <Loader />\n        ) : ordersError ? (\n          <Message variant='danger'>{ordersError}</Message>\n        ) : (\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>PLACED AT</th>\n                <th>TOTAL</th>\n                <th>PAYMENT STATUS</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>{order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      <i\n                        className='fas fa-check'\n                        style={{ color: 'green' }}\n                      ></i>\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button className='btn-sm' variant='light'>\n                        See Order Details\n                      </Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n    </Row>\n  );\n};\n\nexport default Profile;\n","import React, { useState, useEffect } from 'react'\nimport FormContainer from '../components/FormContainer'\n// import CheckoutSteps from '../components/CheckoutSteps';\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\n\nimport { saveShippingAddress } from '../actions/cartActions'\n\nconst Shipping = () => {\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n  const { shippingAddress } = useSelector((state) => state.cart)\n  const { user } = useSelector((state) => state.userLogin)\n\n  const [address, setAddress] = useState(shippingAddress?.address || '')\n  const [postalCode, setPostalCode] = useState(\n    shippingAddress?.postalCode || ''\n  )\n  const [country, setCountry] = useState(shippingAddress?.country || '')\n  const [city, setCity] = useState(shippingAddress?.city || '')\n\n  useEffect(() => {\n    if (!user) {\n      navigate('/login')\n    }\n  }, [navigate, user])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(saveShippingAddress({ address, postalCode, city, country }))\n    navigate('/payment')\n  }\n\n  return (\n    <FormContainer>\n      {/* <CheckoutSteps step1 step2 /> */}\n      {/* ???? */}\n      <h1>Shipping Information</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='address'>\n          <Form.Label>Address:</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter destination address'\n            value={address}\n            required\n            onChange={(e) => setAddress(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='city'>\n          <Form.Label>City:</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter destination city'\n            value={city}\n            required\n            onChange={(e) => setCity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='postalCode'>\n          <Form.Label>Postal Code:</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter destination postal code'\n            value={postalCode}\n            required\n            onChange={(e) => setPostalCode(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='country'>\n          <Form.Label>Country:</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter destination country'\n            value={country}\n            required\n            onChange={(e) => setCountry(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Proceed\n        </Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default Shipping\n","import React, { useState } from 'react'\nimport FormContainer from '../components/FormContainer'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nconst Payment = () => {\n  const { shippingAddress } = useSelector((state) => state.cart)\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n\n  if (!shippingAddress.address) {\n    navigate('/shipping')\n  }\n  const [paymentMethod, setPaymentMethod] = useState('CreditCard')\n\n  const onOptionChange = (e) => {\n    setPaymentMethod((prev) => e.target.value)\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(savePaymentMethod(paymentMethod))\n    navigate('/submitorder')\n  }\n\n  return (\n    <FormContainer>\n      <h1>Payment</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group>\n          <Form.Label as='legend'>Select Payment Method:</Form.Label>\n          <Col>\n            <Form.Check\n              type='radio'\n              label='PayPal'\n              name='paymentMethod'\n              value='PayPal'\n              checked={paymentMethod === 'PayPal'}\n              onChange={onOptionChange}\n            ></Form.Check>\n            <Form.Check\n              type='radio'\n              label='Credit Card'\n              name='paymentMethod'\n              value='CreditCard'\n              checked={paymentMethod === 'CreditCard'}\n              onChange={onOptionChange}\n            ></Form.Check>\n          </Col>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Proceed\n        </Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default Payment\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport Message from '../components/Message'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { createOrder } from '../actions/orderActions'\nimport { useNavigate } from 'react-router-dom'\nimport { createOrderReset } from '../reducers/orderReducer'\nimport { userDetailsReset } from '../reducers/userReducer'\n\nconst SubmitOrder = () => {\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n\n  const cart = useSelector((state) => state.cart)\n  const { order, success, error } = useSelector((state) => state.orderCreate)\n  const { user } = useSelector((state) => state.userLogin)\n\n  if (!cart.shippingAddress.address) {\n    navigate('/shipping')\n  } else if (!cart.paymentMethod) {\n    navigate('/payment')\n  }\n\n  const addDecimals = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2)\n  }\n  const itemsPrice = addDecimals(\n    cart.itemsInCart.reduce((acc, item) => acc + item.price * item.quantity, 0)\n  )\n  const shippingPrice = addDecimals(itemsPrice > 100 ? 0 : 100)\n  const taxPrice = addDecimals(Number((0.13 * itemsPrice).toFixed(2)))\n  const totalPrice = (\n    Number(itemsPrice) +\n    Number(shippingPrice) +\n    Number(taxPrice)\n  ).toFixed(2)\n\n  useEffect(() => {\n    if (!user) {\n      navigate('/login')\n    }\n\n    if (success) {\n      navigate(`/order/${order._id}`)\n      dispatch(createOrderReset())\n      dispatch(userDetailsReset())\n    }\n    // eslint-disable-next-line\n  }, [success, navigate])\n\n  const submitOrderHandler = () => {\n    dispatch(\n      createOrder({\n        items: cart.itemsInCart,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice,\n        shippingPrice,\n        taxPrice,\n        totalPrice,\n      })\n    )\n  }\n\n  return (\n    <>\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Shipping Information</h2>\n              <p>\n                <strong>Address:</strong>\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\n                {cart.shippingAddress.postalCode},{' '}\n                {cart.shippingAddress.country}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method:</h2>\n              {cart.paymentMethod}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Items in Order:</h2>\n              {cart.itemsInCart.length === 0 ? (\n                <Message>There is nothing in your cart</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {cart.itemsInCart.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.quantity} x ${item.price} = $\n                          {(item.quantity * item.price).toFixed(2)}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>${itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>${taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>${totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                {error && <Message variant='danger'>{error}</Message>}\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Button\n                  type='button'\n                  className='btn-block'\n                  disabled={cart.itemsInCart === 0}\n                  onClick={submitOrderHandler}\n                >\n                  Place Order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default SubmitOrder\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { orderPayReset } from '../reducers/orderReducer.js'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { getOrderDetails, payOrder } from '../actions/orderActions'\nimport { cartReset } from '../reducers/cartReducer'\n\nconst Order = () => {\n  const { id: orderId } = useParams()\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n\n  const { order, loading, error } = useSelector((state) => state.orderDetails)\n\n  const { loading: payLoading, success: paymentSuccess } = useSelector(\n    (state) => state.orderPay\n  )\n\n  const { user } = useSelector((state) => state.userLogin)\n\n  const addDecimals = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2)\n  }\n\n  useEffect(() => {\n    if (!user) {\n      navigate('/login')\n    }\n\n    if (!order || paymentSuccess) {\n      dispatch(orderPayReset())\n      dispatch(getOrderDetails(orderId))\n    }\n    dispatch(getOrderDetails(orderId))\n    // eslint-disable-next-line\n  }, [dispatch, orderId, navigate, user, paymentSuccess])\n\n  const paymentHandler = () => {\n    dispatch(payOrder(orderId))\n    dispatch(cartReset())\n  }\n\n  return loading === 'pending' ? (\n    <Loader />\n  ) : error ? (\n    <Message variant='danger'>{error}</Message>\n  ) : (\n    <>\n      <h1>Your Order:</h1>\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Name: </strong> {order.user.name}\n              </p>\n              <p>\n                <strong>Email: </strong>{' '}\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n              </p>\n              <p>\n                <strong>Address: </strong>\n                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\n                {order.shippingAddress.postalCode},{' '}\n                {order.shippingAddress.country}\n              </p>\n              {order.isPaid && (\n                <Message variant='info'>\n                  This order will be delivered in 5 business days\n                </Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Method: </strong>\n                {order.paymentMethod}\n              </p>\n              {order.isPaid ? (\n                <Message variant='success'>Order Paid {order.isPaid}</Message>\n              ) : (\n                <Message variant='danger'>Not Paid</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Items in Order:</h2>\n              {order.items.length === 0 ? (\n                <Message>Order is empty</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {order.items.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.quantity} x ${item.price} = $\n                          {(item.quantity * item.price).toFixed(2)}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items:</Col>\n                  <Col>\n                    $\n                    {addDecimals(\n                      order?.items.reduce(\n                        (acc, item) => acc + item.price * item.quantity,\n                        0\n                      )\n                    )}\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${order.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>${order.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>${order.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              {!order.isPaid && (\n                <ListGroup.Item>\n                  {payLoading === 'pending' ? (\n                    <Loader />\n                  ) : (\n                    <Button onClick={paymentHandler}>Pay For This Order</Button>\n                  )}\n                </ListGroup.Item>\n              )}\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default Order\n","import React from 'react'\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Home from './pages/Home'\nimport Cart from './pages/Cart'\nimport ProductDetails from './pages/ProductDetails'\nimport Login from './pages/Login'\nimport Signup from './pages/Signup'\nimport Profile from './pages/Profile'\nimport Shipping from './pages/Shipping'\nimport Payment from './pages/Payment'\nimport SubmitOrder from './pages/SubmitOrder'\nimport Order from './pages/Order'\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Routes>\n            <Route path='/search/:query/page/:pageNum' element={<Home />} />\n            <Route path='/search/:query' element={<Home />} />\n            <Route path='/page/:pageNum' element={<Home />} />\n            <Route path='/order/:id' element={<Order />} />\n            <Route path='/product/:id' element={<ProductDetails />} />\n            <Route path='/cart/:id?' element={<Cart />} />\n            <Route path='/shipping' element={<Shipping />} />\n            <Route path='/payment' element={<Payment />} />\n            <Route path='/submitorder' element={<SubmitOrder />} />\n            <Route path='/login' element={<Login />} />\n            <Route path='/signup' element={<Signup />} />\n            <Route path='/profile' element={<Profile />} />\n            <Route path='/' element={<Home />} />\n          </Routes>\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  )\n}\n\nexport default App\n","import { configureStore } from '@reduxjs/toolkit';\nimport productDetailsReducer from './reducers/productReducer';\nimport cartReducer from './reducers/cartReducer';\nimport {\n  createOrderReducer,\n  orderDetailsReducer,\n  orderPayReducer,\n  orderListUserReducer,\n} from './reducers/orderReducer';\nimport {\n  userLoginReducer,\n  userSignupReducer,\n  userDetailsReducer,\n  userUpdateReducer,\n} from './reducers/userReducer';\n\nimport {\n  productListReducer,\n  addReviewReducer,\n} from './reducers/productsReducer';\n\nconst itemsInCartFromStorage = localStorage.getItem('itemsInCart')\n  ? JSON.parse(localStorage.getItem('itemsInCart'))\n  : [];\n\nconst shippingInfoFromStorage = localStorage.getItem('shippingAddress')\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\n  : null;\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null;\n\n//preloading any cart saved in the localStorage\nconst initialState = {\n  cart: {\n    itemsInCart: itemsInCartFromStorage,\n    shippingAddress: shippingInfoFromStorage,\n  },\n  userLogin: { user: userInfoFromStorage },\n};\n\nexport const store = configureStore({\n  reducer: {\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    addReview: addReviewReducer,\n    cart: cartReducer,\n    orderCreate: createOrderReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    orderListUser: orderListUserReducer,\n    userLogin: userLoginReducer,\n    userSignup: userSignupReducer,\n    userDetails: userDetailsReducer,\n    userUpdate: userUpdateReducer,\n  },\n  preloadedState: initialState,\n});\n\nexport default store;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './bootstrap.min.css'\nimport './index.css'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport store from './store.js'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}